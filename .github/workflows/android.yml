name: Deploy to Play Store

# Triggers the workflow on push to the 'main' branch and manually via 'workflow_dispatch'
on:
  push:
    branches:
      - main  # Adjust this to the branch you want to trigger the deployment on
  workflow_dispatch:

jobs:
  build:
    name: Build and Deploy to Play Store
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
          run: sudo apt-get update && sudo apt-get install docker-compose -y


      - name: Build Docker image
          run: |
            docker build -t silent-time:latest .

      - name: Build and run services with Docker Compose
          run: |
            docker-compose -f docker-compose.yml up --build -d

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'  # Use your desired Flutter version

      - name: Install dependencies
        run: flutter pub get

#      - name: Setup key.properties
#        run: |
#          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
#          echo "storeFile=key.jks" >> android/key.properties

      - name: Decode keystore
          run: echo $KEYSTORE_BASE64 | base64 --decode > android/app/silent-time.jks

      - name: Build APK
        run: flutter build apk --release

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON }}
          packageName: 'com.superiordev.silenttime'  # Replace with your app's package name
          releaseFile: build/app/outputs/flutter-apk/app-release.apk  # Path to APK or AAB
          track: production  # Use "alpha" or "beta" for testing tracks
          status: completed  # Can be "draft" or "completed"
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag silent-time:latest g3n145/silent-time:latest
          docker push g3n145/silent-time:latest